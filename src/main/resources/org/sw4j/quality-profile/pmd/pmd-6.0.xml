<?xml version="1.0"?>

<ruleset name="Custom Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>This is the PMD ruleset for sw4j.org</description>
  <!-- Best Practices -->
  <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/AccessorClassGeneration">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/AvoidStringBufferField">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP">
    <priority>3</priority>
    <properties>
      <property name="checkAddressTypes">
        <value>[IPv4, IPv6, IPv4 mapped IPv6]</value>
      </property>
      <property name="pattern">
        <value>^"[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"$</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/CheckResultSet">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/ConstantsInInterface">
    <priority>3</priority>
    <properties>
      <property name="ignoreIfHasMethods">
        <value>true</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach">
    <priority>3</priority>
  </rule>
  <!-- log4j is not used -->
  <!--<rule ref="category/java/bestpractices.xml/GuardLogStatement">
    <priority>2</priority>
    <properties>
      <property name="guardsMethods">
        <value>[isTraceEnabled, isDebugEnabled, isInfoEnabled, isWarnEnabled, isErrorEnabled, isLoggable]</value>
      </property>
      <property name="logLevels">
        <value>[trace, debug, info, warn, error, log, finest, finer, fine, info, warning, severe]</value>
      </property>
    </properties>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts">
    <priority>3</priority>
    <properties>
      <property name="maximumAsserts">
        <value>1</value>
      </property>
    </properties>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/JUnitUseExpected">
    <priority>3</priority>
  </rule>-->
  <rule ref="category/java/bestpractices.xml/LooseCoupling">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine">
    <priority>4</priority>
    <properties>
      <property name="strictMode">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/PreserveStackTrace">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/SystemPrintln">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedFormalParameter">
    <priority>3</priority>
    <properties>
      <property name="checkAll">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedImports">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedLocalVariable">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateField">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod">
    <priority>3</priority>
  </rule>
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/UseAssertEqualsInsteadOfAssertTrue">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals">
    <priority>3</priority>
  </rule>-->
  <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/bestpractices.xml/UseVarargs">
    <priority>3</priority>
  </rule>
  <!-- Code Style -->
  <!-- Not used -->
  <!--<rule ref="category/java/codestyle.xml/AbstractNaming">
    <priority>3</priority>
    <properties>
      <property name="strict">
        <value>true</value>
      </property>
    </properties>
  </rule>-->
  <rule ref="category/java/codestyle.xml/AtLeastOneConstructor">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/AvoidDollarSigns">
    <priority>3</priority>
  </rule>
  <!-- Not used -->
  <!--<rule ref="category/java/codestyle.xml/AvoidFinalLocalVariable">
    <priority>3</priority>
  </rule>-->
  <rule ref="category/java/codestyle.xml/AvoidFinalLocalVariable">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/AvoidUsingNativeCode">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/BooleanGetMethodName">
    <priority>4</priority>
    <properties>
      <property name="checkParameterizedMethods">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/CallSuperInConstructor">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/ClassNamingConventions">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier">
    <priority>3</priority>
    <!--<properties>
      <property name="regex">
        <value></value>
      </property>
    </properties>-->
  </rule>
  <rule ref="category/java/codestyle.xml/ConfusingTernary">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/DefaultPackage">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/DontImportJavaLang">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/DuplicateImports">
    <priority>4</priority>
  </rule>
  <!-- is this rule usefull? -->
  <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/ExtendsObject">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass">
    <priority>3</priority>
    <properties>
      <property name="ignoreInterfaceDeclarations">
        <value>false</value>
      </property>
      <property name="ignoreAnonymousClassDeclarations">
        <value>true</value>
      </property>
      <property name="ignoreEnumDeclarations">
        <value>true</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/ForLoopsMustUseBraces">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/GenericsNaming">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/IfStmtsMustUseBraces">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/LongVariable">
    <priority>3</priority>
    <properties>
      <property name="minimum">
        <value>17</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions">
    <priority>1</priority>
    <properties>
      <property name="checkNativeMethods">
        <value>true</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/MIsLeadingVariableName">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/NoPackage">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/OnlyOneReturn">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/PackageCase">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/PrematureDeclaration">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/RemoteInterfaceNamingConvention">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortClassName">
    <priority>4</priority>
    <properties>
      <property name="minimum">
        <value>5</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortMethodName">
    <priority>3</priority>
    <properties>
      <property name="minimum">
        <value>3</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortVariable">
    <priority>3</priority>
    <properties>
      <property name="minimum">
        <value>3</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/SuspiciousConstantFieldName">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/TooManyStaticImports">
    <priority>3</priority>
    <properties>
      <property name="maximumStaticImports">
        <!--<value>4</value>-->
        <value>0</value>
      </property>
    </properties>
  </rule>
  <!-- is this usefull? -->
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn">
    <priority>3</priority>
    <properties>
      <property name="statementOrderMatters">
        <value>true</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryReturn">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/UselessParentheses">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/codestyle.xml/VariableNamingConventions">
    <priority>1</priority>
    <properties>
      <property name="parameterSuffix">
        <value>[]</value>
      </property>
      <property name="parameterPrefix">
        <value>[]</value>
      </property>
      <property name="localSuffix">
        <value>[]</value>
      </property>
      <property name="localPrefix	">
        <value>[]</value>
      </property>
      <property name="memberSuffix">
        <value>[]</value>
      </property>
      <property name="memberPrefix">
        <value>[]</value>
      </property>
      <property name="staticSuffix">
        <value>[]</value>
      </property>
      <property name="staticPrefix">
        <value>[]</value>
      </property>
      <property name="checkParameters">
        <value>true</value>
      </property>
      <property name="checkNativeMethodParameters">
        <value>true</value>
      </property>
      <property name="checkLocals">
        <value>true</value>
      </property>
      <property name="checkMembers">
        <value>true</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/WhileLoopsMustUseBraces">
    <priority>3</priority>
  </rule>
  <!-- Design -->
  <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/design.xml/AvoidCatchingGenericException">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
    <priority>3</priority>
    <properties>
      <property name="problemDepth">
        <value>3</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/AvoidRethrowingException">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/AvoidThrowingNullPointerException">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/design.xml/CollapsibleIfStatements">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/CouplingBetweenObjects">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/CyclomaticComplexity">
    <priority>3</priority>
    <properties>
      <property name="cycloOptions">
        <value>[]</value>
      </property>
      <property name="classReportLevel">
        <value>80</value>
      </property>
      <property name="methodReportLevel">
        <value>10</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/DataClass">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/DoNotExtendJavaLangError">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/ExceptionAsFlowControl">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/ExcessiveClassLength">
    <priority>3</priority>
    <!--<properties>
      <property name="topscore">
        <value></value>
      </property>
      <property name="minimum">
        <value></value>
      </property>
      <property name="sigma">
        <value></value>
      </property>
    </properties>-->
  </rule>
  <rule ref="category/java/design.xml/ExcessiveImports">
    <priority>3</priority>
    <!--<properties>
      <property name="topscore">
        <value></value>
      </property>
      <property name="minimum">
        <value></value>
      </property>
      <property name="sigma">
        <value></value>
      </property>
    </properties>-->
  </rule>
  <rule ref="category/java/design.xml/ExcessiveMethodLength">
    <priority>3</priority>
    <!--<properties>
      <property name="topscore">
        <value></value>
      </property>
      <property name="minimum">
        <value></value>
      </property>
      <property name="sigma">
        <value></value>
      </property>
    </properties>-->
  </rule>
  <rule ref="category/java/design.xml/ExcessiveParameterList">
    <priority>3</priority>
    <!--<properties>
      <property name="topscore">
        <value></value>
      </property>
      <property name="minimum">
        <value></value>
      </property>
      <property name="sigma">
        <value></value>
      </property>
    </properties>-->
  </rule>
  <rule ref="category/java/design.xml/ExcessivePublicCount">
    <priority>3</priority>
    <!--<properties>
      <property name="topscore">
        <value></value>
      </property>
      <property name="minimum">
        <value></value>
      </property>
      <property name="sigma">
        <value></value>
      </property>
    </properties>-->
  </rule>
  <rule ref="category/java/design.xml/FinalFieldCouldBeStatic">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/GodClass">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/ImmutableField">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/LawOfDemeter">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/LogicInversion">
    <priority>3</priority>
  </rule>
  <!-- Not used -->
  <!--<rule ref="category/java/design.xml/LoosePackageCoupling">
    <priority>3</priority>
    <properties>
      <property name="classes">
        <value>[]</value>
      </property>
      <property name="packages">
        <value>[]</value>
      </property>
    </properties>
  </rule>-->
  <rule ref="category/java/design.xml/NcssCount">
    <priority>3</priority>
    <properties>
      <property name="ncssOptions">
        <value>[]</value>
      </property>
      <property name="methodReportLevel">
        <value>12</value>
      </property>
      <property name="classReportLevel">
        <value>250</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/NPathComplexity">
    <priority>3</priority>
    <properties>
      <property name="reportLevel">
        <value>200</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/SignatureDeclareThrowsException">
    <priority>3</priority>
    <properties>
      <property name="IgnoreJUnitCompletely">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/SimplifiedTernary">
    <priority>3</priority>
  </rule>
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/design.xml/SimplifyBooleanAssertion">
    <priority>3</priority>
  </rule>-->
  <rule ref="category/java/design.xml/SimplifyBooleanExpressions">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/SimplifyBooleanReturns">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/SimplifyConditional">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/SingularField">
    <priority>3</priority>
    <properties>
      <property name="disallowNotAssignment">
        <value>false</value>
      </property>
      <property name="checkInnerClasses">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/SwitchDensity">
    <priority>3</priority>
    <!--<properties>
      <property name="topscore">
        <value></value>
      </property>
      <property name="minimum">
        <value></value>
      </property>
      <property name="sigma">
        <value></value>
      </property>
    </properties>-->
  </rule>
  <rule ref="category/java/design.xml/TooManyFields">
    <priority>3</priority>
    <properties>
      <property name="maxfields">
        <value>15</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/TooManyMethods">
    <priority>3</priority>
    <properties>
      <property name="maxmethods">
        <value>10</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/UselessOverridingMethod">
    <priority>3</priority>
    <properties>
      <property name="ignoreAnnotations">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/UseObjectForClearerAPI">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/design.xml/UseUtilityClass">
    <priority>3</priority>
  </rule>
  <!-- Documentation -->
  <!-- Not used -->
  <!--<rule ref="category/java/documentation.xml/CommentContent">
    <priority>3</priority>
  </rule>-->
  <rule ref="category/java/documentation.xml/CommentRequired">
    <priority>3</priority>
    <properties>
      <property name="serialVersionUIDCommentRequired">
        <value>Ignored</value>
      </property>
      <property name="enumCommentRequirement">
        <value>Required</value>
      </property>
      <property name="protectedMethodCommentRequirement">
        <value>Required</value>
      </property>
      <property name="publicMethodCommentRequirement">
        <value>Required</value>
      </property>
      <property name="fieldCommentRequirement">
        <value>Required</value>
      </property>
      <property name="headerCommentRequirement">
        <value>Required</value>
      </property>
      <property name="methodWithOverrideCommentRequirement">
        <value>Ignored</value>
      </property>
      <property name="accessorCommentRequirement">
        <value>Ignored</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/documentation.xml/CommentSize">
    <priority>3</priority>
    <properties>
      <property name="maxLines">
        <!--<value>6</value>-->
        <value>10</value>
      </property>
      <property name="maxLineLength">
        <!--<value>80</value>-->
        <value>120</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor">
    <priority>3</priority>
    <properties>
      <property name="ignoreExplicitConstructorInvocation">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody">
    <priority>3</priority>
  </rule>
  <!-- Error Prone -->
  <rule ref="category/java/errorprone.xml/AssignmentInOperand">
    <priority>3</priority>
    <properties>
      <property name="allowIncrementDecrement">
        <value>false</value>
      </property>
      <property name="allowWhile">
        <value>false</value>
      </property>
      <property name="allowFor">
        <value>false</value>
      </property>
      <property name="allowIf">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidAccessibilityAlteration">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidAssertAsIdentifier">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop">
    <priority>2</priority>
    <properties>
      <property name="checkReturnLoopTypes">
        <value>[for, do, while]</value>
      </property>
      <property name="checkContinueLoopTypes">
        <value>[for, do, while]</value>
      </property>
      <property name="checkBreakLoopTypes">
        <value>[for, do, while]</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidCallingFinalize">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidCatchingNPE">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
    <priority>3</priority>
    <properties>
      <property name="exceptionfile">
        <value></value>
      </property>
      <property name="separator">
        <value>,</value>
      </property>
      <property name="exceptionList">
        <value></value>
      </property>
      <property name="maxDuplicateLiterals">
        <value>4</value>
      </property>
      <property name="minimumLength">
        <value>3</value>
      </property>
      <property name="skipAnnotations">
        <value>false</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition">
    <priority>3</priority>
    <properties>
      <property name="ignoreMagicNumbers">
        <value>-1,0</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/BadComparison">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/BeanMembersShouldSerialize">
    <priority>3</priority>
    <properties>
      <property name="prefix">
        <value></value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/BrokenNullCheck">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CallSuperFirst">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CallSuperLast">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CheckSkipResult">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CloneThrowsCloneNotSupportedException">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/CloseResource">
    <priority>3</priority>
    <properties>
      <property name="closeAsDefaultTarget">
        <value>true</value>
      </property>
      <property name="types">
        <value>[java.sql.Connection, java.sql.Statement, java.sql.ResultSet]</value>
      </property>
      <property name="closeTargets">
        <value>[]</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/DataflowAnomalyAnalysis">
    <priority>5</priority>
    <properties>
      <property name="maxViolations">
        <value>100</value>
      </property>
      <property name="maxPaths">
        <value>1000</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/DoNotCallSystemExit">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/DoNotExtendJavaLangThrowable">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/DoNotHardCodeSDCard">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/DontImportSun">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
    <priority>3</priority>
    <properties>
      <property name="allowCommentedBlocks">
        <value>false</value>
      </property>
      <property name="allowExceptionNameRegex">
        <value>^(ignored|expected)$</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyFinalizer">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyFinallyBlock">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyIfStmt">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyInitializer">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyStatementBlock">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptySwitchStatements">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptySynchronizedBlock">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyTryBlock">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyWhileStmt">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/EqualsNull">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/FinalizeShouldBeProtected">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/IdempotentOperations">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/ImportFromSamePackage">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/InstantiationToGetClass">
    <priority>4</priority>
  </rule>
  <!-- slf4j is not used -->
  <!--<rule ref="category/java/errorprone.xml/InvalidSlf4jMessageFormat">
    <priority>5</priority>
  </rule>-->
  <rule ref="category/java/errorprone.xml/JumbledIncrementer">
    <priority>3</priority>
  </rule>
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/errorprone.xml/JUnitSpelling">
    <priority>3</priority>
  </rule>-->
  <!-- jUnit is not used -->
  <!--<rule ref="category/java/errorprone.xml/JUnitStaticSuite">
    <priority>3</priority>
  </rule>-->
  <rule ref="category/java/errorprone.xml/LoggerIsNotStaticFinal">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/MisplacedNullCheck">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/MissingBreakInSwitch">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/MissingSerialVersionUID">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/MoreThanOneLogger">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/NonStaticInitializer">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/NullAssignment">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/ProperCloneImplementation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/ProperLogger">
    <priority>3</priority>
    <properties>
      <property name="staticLoggerName">
        <value>LOG</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/SingleMethodSingleton">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/SuspiciousOctalEscape">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/TestClassWithoutTestCases">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UnconditionalIfStatement">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UseCorrectExceptionLogging">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UselessOperationOnImmutable">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions">
    <priority>3</priority>
  </rule>
  <!-- Multithreading -->
  <rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/multithreading.xml/AvoidThreadGroup">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/multithreading.xml/AvoidUsingVolatile">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/multithreading.xml/DontCallThreadRun">
    <priority>4</priority>
  </rule>
  <rule ref="category/java/multithreading.xml/DoubleCheckedLocking">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/multithreading.xml/NonThreadSafeSingleton">
    <priority>3</priority>
    <properties>
      <property name="checkNonStaticFields">
        <value>false</value>
      </property>
      <property name="checkNonStaticMethods">
        <value>true</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/multithreading.xml/UnsynchronizedStaticDateFormatter">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/multithreading.xml/UseConcurrentHashMap">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify">
    <priority>3</priority>
  </rule>
  <!-- Performance -->
  <rule ref="category/java/performance.xml/AddEmptyString">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/AppendCharacterWithChar">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/AvoidArrayLoops">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/AvoidFileStream">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/performance.xml/AvoidInstantiatingObjectsInLoops">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/AvoidUsingShortType">
    <priority>1</priority>
  </rule>
  <rule ref="category/java/performance.xml/BigIntegerInstantiation">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/BooleanInstantiation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/performance.xml/ByteInstantiation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends">
    <priority>3</priority>
    <properties>
      <property name="threshold">
        <value>1</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/performance.xml/InefficientEmptyStringCheck">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/InefficientStringBuffering">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/IntegerInstantiation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/performance.xml/LongInstantiation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/performance.xml/OptimizableToArrayCall">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/RedundantFieldInitializer">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/ShortInstantiation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/performance.xml/SimplifyStartsWith">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/StringInstantiation">
    <priority>2</priority>
  </rule>
  <rule ref="category/java/performance.xml/StringToString">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement">
    <priority>3</priority>
    <properties>
      <property name="minimumNumberCaseForASwitch">
        <value>3</value>
      </property>
    </properties>
  </rule>
  <rule ref="category/java/performance.xml/UnnecessaryWrapperObjectCreation">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/UseArraysAsList">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/UseIndexOfChar">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/UselessStringValueOf">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/UseStringBufferForStringAppends">
    <priority>3</priority>
  </rule>
  <rule ref="category/java/performance.xml/UseStringBufferLength">
    <priority>3</priority>
  </rule>
</ruleset>
